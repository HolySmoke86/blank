block placement/removal timers

	removal timing depending on the tool/block combination
	animation for remove

composite entity animations

	complex entities are made up of part which have their own local
	transform that can be animated (like e.g. an arm or head)

textures

	do I need to say anything? :)

command line

	usefull for development and later on world administration

font rendering

	mostly for labelled blocks and some ui elements

networking

	exchange of chunks and entities

persistence

	unloaded chunks should be saved to disk and restored when they
	are loaded again

launcher ui

	select or create a world with configurable parameters

entity ai

	pathfinding, chase and roam states

(block) lighting

	occlusion/neighbor light mixing is implemented, but still linear
	this could be solved by using a pre-interpolated light texture and
	mapping light levels to coordinates on that

	also: how could block light affect entity lighting?
	maybe get the interpolated light level at the entity's center and use
	that as the light power for the directional lighting shader and use a
	direction that's fixed relative to the camera?

	there's a bug where a chunk's model is not updated if its neighbor
	changes border light levels

gravity

	maybe like light levels? should also store a direction with it in
	that case. also, global gravity may be a world option.
	no, per-block gravity vector is most probably too expensive.
	better have the chunks store a few point masses (maybe blocks that
	emit gravitation?) and calculate from that

block attributes

	when blocks are not just a solid rock of color, attributes may
	become interesting. like labels on signs and contents of
	containers

chunk traversal

	maybe the chunk loader should keep an index of interesting, if not
	all chunks by position, possibly base-relative

	profiling indicates that this is not neccessary atm. maybe it will
	when there's some more action in the world

	I got a segfault (sadly in release mode, so no sensible trace, but
	it was in ChunkLoader::Update). I suspect it has something to do
	with how chunks are relinked after a near death experience.

transparency (blocks and entities)

	transparent blocks because awesome

world generator that is not boring

	maybe divide into biomes and add special features like
	settlements, ruins, all kinds of interesting stuff

entity/world collision

	first draft of entity/world collision is implemented
	it jitters and has some surprising behaviour
	finding a spawn point which doesn't put entities in solids is
	now a little more crucial. press N if you're in trouble

better noise

	current simplex noise implementation repeats itself pretty quickly
